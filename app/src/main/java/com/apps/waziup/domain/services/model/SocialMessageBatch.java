/*
 * WAZIUP API
 * This API allows you to access all Waziup services. In order to access protected services, first get a token with POST /auth/token. Then insert this token in the authorization key, specifying \"Bearer\" in front. For example \"Bearer: eyJhbGc...\".
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.apps.waziup.domain.services.model;

import com.google.gson.annotations.SerializedName;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * A message to be sent to several users and socials
 */
@ApiModel(description = "A message to be sent to several users and socials")

public class SocialMessageBatch {
    @SerializedName("usernames")
    private List<String> usernames = null;

    @SerializedName("channels")
    private List<String> channels = new ArrayList<String>();

    @SerializedName("message")
    private String message = null;

    public SocialMessageBatch usernames(List<String> usernames) {
        this.usernames = usernames;
        return this;
    }

    public SocialMessageBatch addUsernamesItem(String usernamesItem) {
        if (this.usernames == null) {
            this.usernames = new ArrayList<String>();
        }
        this.usernames.add(usernamesItem);
        return this;
    }

    /**
     * names of the destination users
     *
     * @return usernames
     **/
    @ApiModelProperty(example = "[\"cdupont\",\"arahim\"]", value = "names of the destination users")
    public List<String> getUsernames() {
        return usernames;
    }

    public void setUsernames(List<String> usernames) {
        this.usernames = usernames;
    }

    public SocialMessageBatch channels(List<String> channels) {
        this.channels = channels;
        return this;
    }

    public SocialMessageBatch addChannelsItem(String channelsItem) {
        this.channels.add(channelsItem);
        return this;
    }

    /**
     * channels where to send the messages
     *
     * @return channels
     **/
    @ApiModelProperty(example = "[\"facebook\",\"sms\"]", required = true, value = "channels where to send the messages")
    public List<String> getChannels() {
        return channels;
    }

    public void setChannels(List<String> channels) {
        this.channels = channels;
    }

    public SocialMessageBatch message(String message) {
        this.message = message;
        return this;
    }

    /**
     * Get message
     *
     * @return message
     **/
    @ApiModelProperty(example = "Test message", required = true, value = "")
    public String getMessage() {
        return message;
    }

    public void setMessage(String message) {
        this.message = message;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SocialMessageBatch socialMessageBatch = (SocialMessageBatch) o;
        return Objects.equals(this.usernames, socialMessageBatch.usernames) &&
                Objects.equals(this.channels, socialMessageBatch.channels) &&
                Objects.equals(this.message, socialMessageBatch.message);
    }

    @Override
    public int hashCode() {
        return Objects.hash(usernames, channels, message);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class SocialMessageBatch {\n");

        sb.append("    usernames: ").append(toIndentedString(usernames)).append("\n");
        sb.append("    channels: ").append(toIndentedString(channels)).append("\n");
        sb.append("    message: ").append(toIndentedString(message)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

