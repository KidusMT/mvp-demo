/*
 * WAZIUP API
 * This API allows you to access all Waziup services. In order to access protected services, first get a token with POST /auth/token. Then insert this token in the authorization key, specifying \"Bearer\" in front. For example \"Bearer: eyJhbGc...\".
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.apps.waziup.domain.services.model;

import com.google.gson.annotations.SerializedName;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import io.swagger.annotations.ApiModelProperty;

/**
 * NotificationSubject
 */

public class NotificationSubject {
    @SerializedName("entityNames")
    private List<String> entityNames = null;

    @SerializedName("condition")
    private NotificationCondition condition = null;

    public NotificationSubject entityNames(List<String> entityNames) {
        this.entityNames = entityNames;
        return this;
    }

    public NotificationSubject addEntityNamesItem(String entityNamesItem) {
        if (this.entityNames == null) {
            this.entityNames = new ArrayList<String>();
        }
        this.entityNames.add(entityNamesItem);
        return this;
    }

    /**
     * Get entityNames
     *
     * @return entityNames
     **/
    @ApiModelProperty(value = "")
    public List<String> getEntityNames() {
        return entityNames;
    }

    public void setEntityNames(List<String> entityNames) {
        this.entityNames = entityNames;
    }

    public NotificationSubject condition(NotificationCondition condition) {
        this.condition = condition;
        return this;
    }

    /**
     * Get condition
     *
     * @return condition
     **/
    @ApiModelProperty(required = true, value = "")
    public NotificationCondition getCondition() {
        return condition;
    }

    public void setCondition(NotificationCondition condition) {
        this.condition = condition;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        NotificationSubject notificationSubject = (NotificationSubject) o;
        return Objects.equals(this.entityNames, notificationSubject.entityNames) &&
                Objects.equals(this.condition, notificationSubject.condition);
    }

    @Override
    public int hashCode() {
        return Objects.hash(entityNames, condition);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class NotificationSubject {\n");

        sb.append("    entityNames: ").append(toIndentedString(entityNames)).append("\n");
        sb.append("    condition: ").append(toIndentedString(condition)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

