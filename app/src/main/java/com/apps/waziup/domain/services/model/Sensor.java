/*
 * WAZIUP API
 * This API allows you to access all Waziup services. In order to access protected services, first get a token with POST /auth/token. Then insert this token in the authorization key, specifying \"Bearer\" in front. For example \"Bearer: eyJhbGc...\".
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.apps.waziup.domain.services.model;

import com.google.gson.annotations.SerializedName;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import io.objectbox.annotation.Convert;
import io.swagger.annotations.ApiModelProperty;

/**
 * Sensor
 */

public class Sensor {
    @SerializedName("id")
    private String id = null;

    @SerializedName("gateway_id")
    private String gatewayId = null;

    @SerializedName("name")
    private String name = null;

    @SerializedName("owner")
    private String owner = null;

    @SerializedName("measurements")
    private List<Measurement> measurements = null;

    @SerializedName("location")
    private Location location = null;

    @SerializedName("domain")
    private String domain = null;

    public Sensor id(String id) {
        this.id = id;
        return this;
    }

    /**
     * Unique ID of the sensor node
     *
     * @return id
     **/
    @ApiModelProperty(example = "Sensor2-ea0541de1ab7132a1d45b85f9b2139f5", required = true, value = "Unique ID of the sensor node")
    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public Sensor gatewayId(String gatewayId) {
        this.gatewayId = gatewayId;
        return this;
    }

    /**
     * Unique ID of the gateway
     *
     * @return gatewayId
     **/
    @ApiModelProperty(example = "ea0541de1ab7132a1d45b85f9b2139f5", value = "Unique ID of the gateway")
    public String getGatewayId() {
        return gatewayId;
    }

    public void setGatewayId(String gatewayId) {
        this.gatewayId = gatewayId;
    }

    public Sensor name(String name) {
        this.name = name;
        return this;
    }

    /**
     * name of the sensor node
     *
     * @return name
     **/
    @ApiModelProperty(example = "My weather station", value = "name of the sensor node")
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Sensor owner(String owner) {
        this.owner = owner;
        return this;
    }

    /**
     * owner of the sensor node
     *
     * @return owner
     **/
    @ApiModelProperty(example = "cdupont", value = "owner of the sensor node")
    public String getOwner() {
        return owner;
    }

    public void setOwner(String owner) {
        this.owner = owner;
    }

    public Sensor measurements(List<Measurement> measurements) {
        this.measurements = measurements;
        return this;
    }

    public Sensor addMeasurementsItem(Measurement measurementsItem) {
        if (this.measurements == null) {
            this.measurements = new ArrayList<Measurement>();
        }
        this.measurements.add(measurementsItem);
        return this;
    }

    /**
     * Get measurements
     *
     * @return measurements
     **/
    @ApiModelProperty(value = "")
    public List<Measurement> getMeasurements() {
        return measurements;
    }

    public void setMeasurements(List<Measurement> measurements) {
        this.measurements = measurements;
    }

    public Sensor location(Location location) {
        this.location = location;
        return this;
    }

    /**
     * Get location
     *
     * @return location
     **/
    @ApiModelProperty(value = "")
    public Location getLocation() {
        return location;
    }

    public void setLocation(Location location) {
        this.location = location;
    }

    public Sensor domain(String domain) {
        this.domain = domain;
        return this;
    }

    /**
     * the domain of this sensor.
     *
     * @return domain
     **/
    @ApiModelProperty(example = "waziup", value = "the domain of this sensor.")
    public String getDomain() {
        return domain;
    }

    public void setDomain(String domain) {
        this.domain = domain;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Sensor sensor = (Sensor) o;
        return Objects.equals(this.id, sensor.id) &&
                Objects.equals(this.gatewayId, sensor.gatewayId) &&
                Objects.equals(this.name, sensor.name) &&
                Objects.equals(this.owner, sensor.owner) &&
                Objects.equals(this.measurements, sensor.measurements) &&
                Objects.equals(this.location, sensor.location) &&
                Objects.equals(this.domain, sensor.domain);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, gatewayId, name, owner, measurements, location, domain);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Sensor {\n");

        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    gatewayId: ").append(toIndentedString(gatewayId)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
        sb.append("    measurements: ").append(toIndentedString(measurements)).append("\n");
        sb.append("    location: ").append(toIndentedString(location)).append("\n");
        sb.append("    domain: ").append(toIndentedString(domain)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

